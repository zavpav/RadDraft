// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestConsoleTest.Spr
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Ввод справочника Справочник кодов ОКС")]
    public partial class ВводСправочникаСправочникКодовОКСFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Spr", "Ввод справочника Справочник кодов ОКС", "Заполнение справочника кодов ОКС", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Первичная загрузка данных Справочник кодов ОКС")]
        [NUnit.Framework.CategoryAttribute("регрес")]
        public void ПервичнаяЗагрузкаДанныхСправочникКодовОКС()
        {
            string[] tagsOfScenario = new string[] {
                    "регрес"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Первичная загрузка данных Справочник кодов ОКС", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("в справочнике \'Справочник кодов ОКС\' количество записей = \'0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                            "Родитель",
                            "Код",
                            "Полное наименование",
                            "Начало",
                            "Конец"});
                table102.AddRow(new string[] {
                            "",
                            "00000000045487",
                            "Внешний код 1",
                            "01.01.1900",
                            "01.01.2100"});
                table102.AddRow(new string[] {
                            "",
                            "00000000011111",
                            "Наименование тест 1",
                            "01.01.1900",
                            "01.01.2100"});
                table102.AddRow(new string[] {
                            "",
                            "00000000022222",
                            "Наименование тест 2",
                            "01.01.1900",
                            "01.01.2100"});
                table102.AddRow(new string[] {
                            "",
                            "00000000209118",
                            "Внешний код 2",
                            "01.01.1900",
                            "01.01.2100"});
                testRunner.When("вводим в справочник \'Справочник кодов ОКС\' запись:", ((string)(null)), table102, "Когда ");
                testRunner.Then("в справочнике \'Справочник кодов ОКС\' количество записей = \'4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
