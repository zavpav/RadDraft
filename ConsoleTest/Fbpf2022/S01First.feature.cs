// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestConsoleTest.Fbpf2022
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Набор скриптов 2022")]
    public partial class НаборСкриптов2022Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Fbpf2022", "Набор скриптов 2022", @"	 0. (+) Первичное заполнение справочников
	 
	 1. (+) создаем организацию
     2. (+) создаем пользователя под организацию
     3. (+) создаем КУ для пользователя
     4. (+) добавляем организацию в БР
     5. (+) создаем распределение для пользователя
     6. (+) создаем РР для пользователя
     7. (+) логинимся под '<<Логин>>', донастраиваем иерархию
     8. (+) добавляем тестовых ПБСов в ТО
	 
	 9. (+) загрузка РР в ТО
	10. (+) добавление ПБС ТО в БР
	11. (+) распределение средств до ПБС в ТО
	12. (+) создание РР в ТО




Базовый1   - ""Штатные ТО с полным доведением 1 раз"" (ЦА-ТО-ПБС)
Нулевой1   - ""Штатные ТО с полным доведением 2 раза и нулевыми РР"" (ЦА-ТО-ПБС, ЦА-ТО, ЦА-ТО)
Пустой1    - ""ПБС, который добавляется в Роспись, но по нему не создаются распределения"" (ЦА)



CreateAll2 - Первый проход создания сумм. Формируются исходящие РР1 (БА/ЛБО) РР2 (ПОФ Бюджет)  РР3 (ПОФ внебюджет)
ThirdSumm - Второй проход формирования сумм РР4 (хотя написано что РР3)
ForthSumm - Третий проход формирования сумм РР5 (хотя написано что РР4)", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Базовый скрипт обучения 2022")]
        public void БазовыйСкриптОбучения2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Базовый скрипт обучения 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.And("проверяем рабочий год =2022", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("пересоздать временную папку", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("Выполняем сценарий \'Первичная загрузка справочников к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("Выполняем сценарий \'Первичное создание БР к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'Первичное создание БР к обучению ПОФ 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("Выполняем сценарий \'Создание системного пользователя ЦАСИС 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "Базовый код",
                            "Логин",
                            "Пароль",
                            "Фамилия"});
                table1.AddRow(new string[] {
                            "001001",
                            "Базовый1",
                            "ца",
                            "Базовый 1 Наталья Юрьевна"});
                table1.AddRow(new string[] {
                            "001051",
                            "Нулевой1",
                            "ца",
                            "Нулевой 1 Наталья Юрьевна"});
                table1.AddRow(new string[] {
                            "001101",
                            "Пустой1",
                            "ца",
                            "Пустой 1  Наталья Юрьевна"});
                testRunner.When("Выполняем сценарий \'Полное создание пользователя к обучению 2022\'", ((string)(null)), table1, "Когда ");
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "Базовый код",
                            "Логин",
                            "Пароль",
                            "Фамилия"});
                table2.AddRow(new string[] {
                            "001001",
                            "Базовый1",
                            "ца",
                            "Базовый 1 Наталья Юрьевна"});
                table2.AddRow(new string[] {
                            "001051",
                            "Нулевой1",
                            "ца",
                            "Нулевой 1 Наталья Юрьевна"});
                table2.AddRow(new string[] {
                            "001101",
                            "Пустой1",
                            "ца",
                            "Пустой 1  Наталья Юрьевна"});
                testRunner.When("Выполняем сценарий \'Донастройка региона для обучения 2022\'", ((string)(null)), table2, "Когда ");
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "Базовый код",
                            "Логин",
                            "Пароль",
                            "Фамилия"});
                table3.AddRow(new string[] {
                            "001001",
                            "Базовый1",
                            "ца",
                            "Базовый 1 Наталья Юрьевна"});
                table3.AddRow(new string[] {
                            "001051",
                            "Нулевой1",
                            "ца",
                            "Нулевой 1 Наталья Юрьевна"});
                testRunner.When("Выполняем сценарий \'Полное создание Данных к обучению 2022\'", ((string)(null)), table3, "Когда ");
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "Базовый код",
                            "Логин",
                            "Пароль",
                            "Фамилия"});
                table4.AddRow(new string[] {
                            "001001",
                            "Базовый1",
                            "ца",
                            "Базовый 1 Наталья Юрьевна"});
                table4.AddRow(new string[] {
                            "001051",
                            "Нулевой1",
                            "ца",
                            "Нулевой 1 Наталья Юрьевна"});
                testRunner.When("Выполняем сценарий \'Полное создание Данных к обучению ПОФ 2022\'", ((string)(null)), table4, "Когда ");
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "Базовый код",
                            "Логин",
                            "Пароль",
                            "Фамилия"});
                table5.AddRow(new string[] {
                            "001001",
                            "Базовый1",
                            "ца",
                            "Базовый 1 Наталья Юрьевна"});
                table5.AddRow(new string[] {
                            "001051",
                            "Нулевой1",
                            "ца",
                            "Нулевой 1 Наталья Юрьевна"});
                testRunner.When("Выполняем сценарий \'Сохранение выписки по ЛС в файл (контекст) 2022\'", ((string)(null)), table5, "Когда ");
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "Базовый код",
                            "Логин",
                            "Пароль",
                            "Фамилия"});
                table6.AddRow(new string[] {
                            "001001",
                            "Базовый1",
                            "ца",
                            "Базовый 1 Наталья Юрьевна"});
                table6.AddRow(new string[] {
                            "001051",
                            "Нулевой1",
                            "ца",
                            "Нулевой 1 Наталья Юрьевна"});
                testRunner.When("Выполняем сценарий \'Просто тесты территории к обучению 2022\'", ((string)(null)), table6, "Когда ");
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                            "Базовый код",
                            "Логин",
                            "Пароль",
                            "Фамилия"});
                table7.AddRow(new string[] {
                            "001101",
                            "Пустой1",
                            "ца",
                            "Пустой 1\tНаталья Юрьевна"});
                testRunner.When("Выполняем сценарий \'Добавление организации в БР к обучению 2022\'", ((string)(null)), table7, "Когда ");
                testRunner.When("Выполняем сценарий \'Привязка существующих ПБС к кодам ОКС 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                            "Базовый код",
                            "Логин",
                            "Пароль",
                            "Фамилия"});
                table8.AddRow(new string[] {
                            "001001",
                            "Базовый1",
                            "ца",
                            "Базовый 1 Наталья Юрьевна"});
                table8.AddRow(new string[] {
                            "001051",
                            "Нулевой1",
                            "ца",
                            "Нулевой 1 Наталья Юрьевна"});
                testRunner.When("Выполняем сценарий \'Создание и обработка третьего КУ и создание РР3 2022\'", ((string)(null)), table8, "Когда ");
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                            "Базовый код",
                            "Логин",
                            "Пароль",
                            "Фамилия"});
                table9.AddRow(new string[] {
                            "001001",
                            "Базовый1",
                            "ца",
                            "Базовый 1 Наталья Юрьевна"});
                table9.AddRow(new string[] {
                            "001051",
                            "Нулевой1",
                            "ца",
                            "Нулевой 1 Наталья Юрьевна"});
                testRunner.When("Выполняем сценарий \'Создание и обработка четвертого КУ и создание РР4 2022\'", ((string)(null)), table9, "Когда ");
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                            "Базовый код",
                            "Логин",
                            "Пароль",
                            "Фамилия"});
                table10.AddRow(new string[] {
                            "001001",
                            "Базовый1",
                            "ца",
                            "Базовый 1 Наталья Юрьевна"});
                table10.AddRow(new string[] {
                            "001051",
                            "Нулевой1",
                            "ца",
                            "Нулевой 1 Наталья Юрьевна"});
                testRunner.When("Выполняем сценарий \'Создание и обработка нулевого РР после основного 2022\'", ((string)(null)), table10, "Когда ");
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                            "Базовый код",
                            "Логин",
                            "Пароль",
                            "Фамилия"});
                table11.AddRow(new string[] {
                            "001001",
                            "Базовый1",
                            "ца",
                            "Базовый 1 Наталья Юрьевна"});
                testRunner.When("Выполняем сценарий \'Создание документов с кодами ОКС 2022\'", ((string)(null)), table11, "Когда ");
                testRunner.When("Выполняем сценарий \'Отчёты ЦА 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Создание системного пользователя ЦАСИС 2022")]
        public void СозданиеСистемногоПользователяЦАСИС2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Создание системного пользователя ЦАСИС 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                            "Логин",
                            "Пароль",
                            "Код ТО",
                            "Имя",
                            "Роли"});
                table12.AddRow(new string[] {
                            "ЦАСИС",
                            "ца",
                            "xxxxx320",
                            "ЦАСИС",
                            "ГРБС, Расширенные режимы работы"});
                testRunner.When("создаем пользователей:", ((string)(null)), table12, "Когда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Полное создание пользователя к обучению 2022")]
        [NUnit.Framework.CategoryAttribute("степ")]
        public void ПолноеСозданиеПользователяКОбучению2022()
        {
            string[] tagsOfScenario = new string[] {
                    "степ"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Полное создание пользователя к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.When("Выполняем сценарий \'Создание организации к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.When("Выполняем сценарий \'Создание пользователя к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Полное создание Данных к обучению 2022")]
        [NUnit.Framework.CategoryAttribute("степ")]
        public void ПолноеСозданиеДанныхКОбучению2022()
        {
            string[] tagsOfScenario = new string[] {
                    "степ"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Полное создание Данных к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.When("Выполняем сценарий \'Создание КУ к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.When("Выполняем сценарий \'Добавление организации в БР к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.When("Выполняем сценарий \'Загрузка данных для территории к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.When("Выполняем сценарий \'Создание РР для обучения 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Полное создание Данных к обучению ПОФ 2022")]
        public void ПолноеСозданиеДанныхКОбучениюПОФ2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Полное создание Данных к обучению ПОФ 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.When("Выполняем сценарий \'Создание КУ к обучению ПОФ 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.When("Выполняем сценарий \'Добавление организации в БР к обучению ПОФ 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.When("Выполняем сценарий \'Загрузка данных для территории к обучению ПОФ 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.When("Выполняем сценарий \'Создание РР для обучения ПОФ 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Создание организации к обучению 2022")]
        public void СозданиеОрганизацииКОбучению2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Создание организации к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("выполнить пункт меню \'Организации\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код"});
                table13.AddRow(new string[] {
                            "xxxxx320"});
                testRunner.When("в активном гриде выбираем строки", ((string)(null)), table13, "Когда ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                            "Поле",
                            "Значение"});
                table14.AddRow(new string[] {
                            "Код",
                            "<<Базовый код>>00"});
                table14.AddRow(new string[] {
                            "Сокращенное наименование",
                            "<<Логин>>"});
                table14.AddRow(new string[] {
                            "Краткое наименование",
                            "<<Логин>>"});
                table14.AddRow(new string[] {
                            "Полное наименование",
                            "Территория  <<Логин>>"});
                table14.AddRow(new string[] {
                            "Тип организации",
                            "РБС"});
                table14.AddRow(new string[] {
                            "Подтип организации",
                            "Территориальный орган"});
                table14.AddRow(new string[] {
                            "Порядковый номер",
                            "<globalintnumber><<Базовый код>>"});
                table14.AddRow(new string[] {
                            "&luState -> Код",
                            "01"});
                table14.AddRow(new string[] {
                            "Начало",
                            "01.01.2022"});
                testRunner.And("заполнить параметры формы", ((string)(null)), table14, "И ");
                TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                            "Тип лицевого счета",
                            "Номер лицевого счета",
                            "ТОФК",
                            "По умолчанию"});
                table15.AddRow(new string[] {
                            "01",
                            "01123456789",
                            "0400",
                            "Да"});
                table15.AddRow(new string[] {
                            "03",
                            "03098765432",
                            "0400",
                            "Нет"});
                testRunner.And("в форме редактирования организации ввести счет", ((string)(null)), table15, "И ");
                testRunner.And("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.Then("всё хорошо", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Создание пользователя к обучению 2022")]
        public void СозданиеПользователяКОбучению2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Создание пользователя к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("всё хорошо", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                            "Логин",
                            "Пароль",
                            "Код ТО",
                            "Фамилия",
                            "Роли"});
                table16.AddRow(new string[] {
                            "<<Логин>>",
                            "<<Пароль>>",
                            "<<Базовый код>>00",
                            "<<Фамилия>>",
                            "РБС"});
                testRunner.When("создаем пользователей:", ((string)(null)), table16, "Когда ");
                testRunner.Then("всё хорошо", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Создание КУ к обучению 2022")]
        [NUnit.Framework.CategoryAttribute("степ")]
        public void СозданиеКУКОбучению2022()
        {
            string[] tagsOfScenario = new string[] {
                    "степ"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Создание КУ к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("выполнить пункт меню \'Казначейские уведомления\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.When("в списке документов \'КУ\' выполнить операцию \'Создать\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                            "Поле",
                            "Значение"});
                table17.AddRow(new string[] {
                            "Дата создания",
                            "01.01.2022"});
                table17.AddRow(new string[] {
                            "Номер",
                            "<<Базовый код>>/001"});
                table17.AddRow(new string[] {
                            "Примечание",
                            "КУ для <<Логин>>"});
                table17.AddRow(new string[] {
                            "Лицевой счет",
                            "12345678901"});
                table17.AddRow(new string[] {
                            "Код главы по БК",
                            "320"});
                table17.AddRow(new string[] {
                            "Наименование ГРБС/ГАИФДБ",
                            "ФСИН России"});
                table17.AddRow(new string[] {
                            "Тип КБК",
                            "01"});
                table17.AddRow(new string[] {
                            "Должность ответственного исполнителя",
                            "Должность ответственного исполнителя"});
                table17.AddRow(new string[] {
                            "ФИО ответственного исполнителя",
                            "ФИО ответственного исполнителя"});
                table17.AddRow(new string[] {
                            "Телефон ответственного исполнителя",
                            "Телефон ответственного исполнителя"});
                table17.AddRow(new string[] {
                            "Должность начальника отдела",
                            "Должность начальника отдела"});
                table17.AddRow(new string[] {
                            "ФИО начальника отдела",
                            "ФИО начальника отдела"});
                table17.AddRow(new string[] {
                            "Должность руководителя",
                            "Должность руководителя"});
                table17.AddRow(new string[] {
                            "ФИО руководителя",
                            "ФИО руководителя"});
                table17.AddRow(new string[] {
                            "Дата введения в действие",
                            "01.01.2022"});
                table17.AddRow(new string[] {
                            "Дата подписания",
                            "01.01.2022"});
                table17.AddRow(new string[] {
                            "Дата подписания начальником управления",
                            "01.01.2022"});
                table17.AddRow(new string[] {
                            "Ввод завершен",
                            "Да"});
                testRunner.And("заполнить параметры формы", ((string)(null)), table17, "И ");
                testRunner.When("выбираем вкладку \'БА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                            "КБК",
                            "->",
                            "КБК",
                            "&Sm1",
                            "&Sm2",
                            "&Sm3"});
                table18.AddRow(new string[] {
                            "",
                            "",
                            "32001090311630000200",
                            "80000",
                            "0",
                            "0"});
                testRunner.And("в активном гриде заполняем данные", ((string)(null)), table18, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                            "КБК",
                            "->",
                            "КБК",
                            "&Sm1",
                            "&Sm2",
                            "&Sm3"});
                table19.AddRow(new string[] {
                            "",
                            "",
                            "32007084230800000600",
                            "42000",
                            "0",
                            "0"});
                testRunner.And("в активном гриде заполняем данные", ((string)(null)), table19, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                            "КБК",
                            "->",
                            "КБК",
                            "&Sm1",
                            "&Sm2",
                            "&Sm3"});
                table20.AddRow(new string[] {
                            "",
                            "",
                            "32010030821438990800",
                            "24000",
                            "0",
                            "0"});
                testRunner.And("в активном гриде заполняем данные", ((string)(null)), table20, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                            "КБК",
                            "->",
                            "КБК",
                            "&Sm1",
                            "&Sm2",
                            "&Sm3"});
                table21.AddRow(new string[] {
                            "",
                            "",
                            "32005014230394034400",
                            "30000",
                            "0",
                            "0"});
                testRunner.And("в активном гриде заполняем данные", ((string)(null)), table21, "И ");
                testRunner.When("выбираем вкладку \'ЛБО\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                            "КБК",
                            "->",
                            "КБК",
                            "&Sm1",
                            "&Sm2",
                            "&Sm3"});
                table22.AddRow(new string[] {
                            "",
                            "",
                            "32001090311630150224",
                            "80000",
                            "0",
                            "0"});
                testRunner.And("в активном гриде заполняем данные", ((string)(null)), table22, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                            "КБК",
                            "->",
                            "КБК",
                            "&Sm1",
                            "&Sm2",
                            "&Sm3"});
                table23.AddRow(new string[] {
                            "",
                            "",
                            "32007084230800590611",
                            "42000",
                            "0",
                            "0"});
                testRunner.And("в активном гриде заполняем данные", ((string)(null)), table23, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                            "КБК",
                            "->",
                            "КБК",
                            "&Sm1",
                            "&Sm2",
                            "&Sm3"});
                table24.AddRow(new string[] {
                            "",
                            "",
                            "32005014230394034414",
                            "30000",
                            "0",
                            "0"});
                testRunner.And("в активном гриде заполняем данные", ((string)(null)), table24, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Добавление организации в БР к обучению 2022")]
        public void ДобавлениеОрганизацииВБРКОбучению2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Добавление организации в БР к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.When("выполнить пункт меню \'Редактирование структуры росписи\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                            "Полный код БР"});
                table25.AddRow(new string[] {
                            "320.0109.0311630150.224.01011"});
                table25.AddRow(new string[] {
                            "320.0109.0311630150.224.21021"});
                table25.AddRow(new string[] {
                            "320.0109.0311630150.224.22021"});
                table25.AddRow(new string[] {
                            "320.0109.0311630150.224.25011"});
                table25.AddRow(new string[] {
                            "320.0109.0311630150.224.17021"});
                table25.AddRow(new string[] {
                            "320.0501.4230394034.414.10011"});
                table25.AddRow(new string[] {
                            "320.0708.4230800590.611.10011"});
                table25.AddRow(new string[] {
                            "320.1003.0821438990.821.02011"});
                table25.AddRow(new string[] {
                            "320.1003.0821438990.821.09011"});
                testRunner.When("Выполняем сценарий \'Добавление организации в БР к обучению (контекст-контекст) 20" +
                        "22\'", ((string)(null)), table25, "Когда ");
                testRunner.Then("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Добавление организации в БР к обучению (контекст-контекст) 2022")]
        public void ДобавлениеОрганизацииВБРКОбучениюКонтекст_Контекст2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Добавление организации в БР к обучению (контекст-контекст) 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.When("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в редактировании БР в поле Код вводим \'<<Полный код БР>>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("сохранить скриншот", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'<<Базовый код>>00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Создание КУ к обучению ПОФ 2022")]
        [NUnit.Framework.CategoryAttribute("степ")]
        public void СозданиеКУКОбучениюПОФ2022()
        {
            string[] tagsOfScenario = new string[] {
                    "степ"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Создание КУ к обучению ПОФ 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("выполнить пункт меню \'Казначейские уведомления\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.When("в списке документов \'КУ\' выполнить операцию \'Создать\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                            "Поле",
                            "Значение"});
                table26.AddRow(new string[] {
                            "Дата создания",
                            "<glodatedate>"});
                table26.AddRow(new string[] {
                            "Номер",
                            "<<Базовый код>>/002"});
                table26.AddRow(new string[] {
                            "Примечание",
                            "КУ ПОФ для <<Логин>>"});
                table26.AddRow(new string[] {
                            "Лицевой счет",
                            "12345678901"});
                table26.AddRow(new string[] {
                            "Код главы по БК",
                            "320"});
                table26.AddRow(new string[] {
                            "Наименование ГРБС/ГАИФДБ",
                            "ФСИН России"});
                table26.AddRow(new string[] {
                            "Тип КБК",
                            "01"});
                table26.AddRow(new string[] {
                            "Должность ответственного исполнителя",
                            "Должность ответственного исполнителя"});
                table26.AddRow(new string[] {
                            "ФИО ответственного исполнителя",
                            "ФИО ответственного исполнителя"});
                table26.AddRow(new string[] {
                            "Телефон ответственного исполнителя",
                            "Телефон ответственного исполнителя"});
                table26.AddRow(new string[] {
                            "Должность начальника отдела",
                            "Должность начальника отдела"});
                table26.AddRow(new string[] {
                            "ФИО начальника отдела",
                            "ФИО начальника отдела"});
                table26.AddRow(new string[] {
                            "Должность руководителя",
                            "Должность руководителя"});
                table26.AddRow(new string[] {
                            "ФИО руководителя",
                            "ФИО руководителя"});
                table26.AddRow(new string[] {
                            "Дата введения в действие",
                            "<glodatedate>"});
                table26.AddRow(new string[] {
                            "Дата подписания",
                            "<glodatedate>"});
                table26.AddRow(new string[] {
                            "Дата подписания начальником управления",
                            "<glodatedate>"});
                table26.AddRow(new string[] {
                            "Ввод завершен",
                            "Да"});
                testRunner.And("заполнить параметры формы", ((string)(null)), table26, "И ");
                testRunner.When("выбираем вкладку \'ПОФ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                            "КБК",
                            "->",
                            "КБК",
                            "&Sm1"});
                table27.AddRow(new string[] {
                            "",
                            "",
                            "32000000000000000000",
                            "10000"});
                testRunner.And("в активном гриде заполняем данные", ((string)(null)), table27, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Загрузка данных для территории к обучению ПОФ 2022")]
        [NUnit.Framework.CategoryAttribute("степ")]
        public void ЗагрузкаДанныхДляТерриторииКОбучениюПОФ2022()
        {
            string[] tagsOfScenario = new string[] {
                    "степ"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Загрузка данных для территории к обучению ПОФ 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.When("выполняем пункт меню \'Бюджетная роспись ПОФ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в открытой Росписи на узле \'320\' создаем документ \'Детализация КУ ПОФ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код",
                            "->",
                            "&DeltaSmPof"});
                table28.AddRow(new string[] {
                            "320.12",
                            "",
                            "9500"});
                table28.AddRow(new string[] {
                            "320.22",
                            "",
                            "500"});
                testRunner.And("в активном гриде заполнить данные", ((string)(null)), table28, "И ");
                testRunner.And("в активной форме установить галку \'Ввод завершен\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("выполняем пункт меню \'Бюджетная роспись ПОФ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в открытой Росписи на узле \'320.11\' создаем документ \'Распределение ПОФ по ПБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код",
                            "->",
                            "&DeltaSmPof"});
                table29.AddRow(new string[] {
                            "320.11.<<Базовый код>>00",
                            "",
                            "9000"});
                testRunner.And("в активном гриде заполнить данные", ((string)(null)), table29, "И ");
                testRunner.And("в активной форме установить галку \'Ввод завершен\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("выполняем пункт меню \'Бюджетная роспись ПОФ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в открытой Росписи на узле \'320.21\' создаем документ \'Распределение ПОФ по ПБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код",
                            "->",
                            "&DeltaSmPof"});
                table30.AddRow(new string[] {
                            "320.21.<<Базовый код>>00",
                            "",
                            "500"});
                testRunner.And("в активном гриде заполнить данные", ((string)(null)), table30, "И ");
                testRunner.And("в активной форме установить галку \'Ввод завершен\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Создание РР для обучения ПОФ 2022")]
        public void СозданиеРРДляОбученияПОФ2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Создание РР для обучения ПОФ 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                            "Тип ПОФ",
                            "Номер РР"});
                table31.AddRow(new string[] {
                            "Бюджет",
                            "002"});
                table31.AddRow(new string[] {
                            "ДИБФ",
                            "003"});
                testRunner.When("Выполняем сценарий \'Создание РР для обучения ПОФ (контекст-контекст) 2022\'", ((string)(null)), table31, "Когда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Создание РР для обучения ПОФ (контекст-контекст) 2022")]
        public void СозданиеРРДляОбученияПОФКонтекст_Контекст2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Создание РР для обучения ПОФ (контекст-контекст) 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.When("всё хорошо", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.When("в окне Список документов \'Наше РР\' выполняю операцию \'Создать РР ПОФ (<<Тип ПОФ>>" +
                        ")\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                            "Наименование",
                            "->",
                            "Выбор"});
                table32.AddRow(new string[] {
                            "<<Логин>>",
                            "",
                            "Да"});
                testRunner.And("в активном гриде заполнить данные", ((string)(null)), table32, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Далее >\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Далее >\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                            "ПБС",
                            "Статус"});
                table33.AddRow(new string[] {
                            "<<Логин>>",
                            "Новое"});
                testRunner.When("в активном гриде выбираем строки", ((string)(null)), table33, "Когда ");
                TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                            "Параметр",
                            "Значение"});
                table34.AddRow(new string[] {
                            "Каталог",
                            "<TestBinExp>"});
                testRunner.When("подготовить диалог", ((string)(null)), table34, "Когда ");
                testRunner.When("в списке документов \'Наше РР\' выполнить операцию \'Выгрузка\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("есть файл в \'<TestBinExp>\' с маской \'*.AP*\' и данными \'<<Базовый код>>00/<<Номер " +
                        "РР>>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("переименовать файл \'<TestBinExp>\' с маской \'*.AP*\' и данными \'<<Базовый код>>00/<" +
                        "<Номер РР>>\' в \'<<Логин>> ПОФ <<Тип ПОФ>>.AP0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                            "ПБС",
                            "Статус"});
                table35.AddRow(new string[] {
                            "<<Логин>>",
                            "Отправлено"});
                testRunner.When("в активном гриде выбираем строки", ((string)(null)), table35, "Когда ");
                TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                            "Параметр",
                            "Значение"});
                table36.AddRow(new string[] {
                            "Номер документа",
                            "00"});
                table36.AddRow(new string[] {
                            "Дата документа",
                            "<glodatedate>"});
                table36.AddRow(new string[] {
                            "Тип документа",
                            "Ручной режим"});
                table36.AddRow(new string[] {
                            "Примечание",
                            "<<Логин>>"});
                testRunner.And("подготовить диалог", ((string)(null)), table36, "И ");
                testRunner.And("в окне Список документов \'Наше РР\' выполняю операцию \'Принят в ФК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Добавление организации в БР к обучению ПОФ 2022")]
        public void ДобавлениеОрганизацииВБРКОбучениюПОФ2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Добавление организации в БР к обучению ПОФ 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.When("выполнить пункт меню \'Редактирование структуры росписи ПОФ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                            "Полный код БР"});
                table37.AddRow(new string[] {
                            "320.11"});
                table37.AddRow(new string[] {
                            "320.21"});
                testRunner.When("Выполняем сценарий \'Добавление организации в БР к обучению (контекст-контекст) 20" +
                        "22\'", ((string)(null)), table37, "Когда ");
                testRunner.Then("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Добавление организации в БР к обучению ПОФ (контекст-контекст) 2022")]
        public void ДобавлениеОрганизацииВБРКОбучениюПОФКонтекст_Контекст2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Добавление организации в БР к обучению ПОФ (контекст-контекст) 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.When("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в редактировании БР в поле Код вводим \'<<Полный код БР>>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'<<Базовый код>>00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Загрузка данных для территории к обучению 2022")]
        [NUnit.Framework.CategoryAttribute("степ")]
        public void ЗагрузкаДанныхДляТерриторииКОбучению2022()
        {
            string[] tagsOfScenario = new string[] {
                    "степ"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Загрузка данных для территории к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("выполнить пункт меню \'Бюджетная роспись\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код",
                            "Сумма 1",
                            "Текстовка"});
                table38.AddRow(new string[] {
                            "320.0109.0311630150.224.01011.<<Базовый код>>00",
                            "15000",
                            "на почтовые расходы"});
                table38.AddRow(new string[] {
                            "320.0109.0311630150.224.17021.<<Базовый код>>00",
                            "15000",
                            "на текущие командировки"});
                table38.AddRow(new string[] {
                            "320.0109.0311630150.224.17021.<<Базовый код>>00",
                            "50000",
                            "на выплату пособия при перемещении по службе"});
                table38.AddRow(new string[] {
                            "320.0501.4230394034.414.10011.<<Базовый код>>00",
                            "30000",
                            "на строительство"});
                table38.AddRow(new string[] {
                            "320.0708.4230800590.611.10011.<<Базовый код>>00",
                            "42000",
                            "На продовольствие"});
                table38.AddRow(new string[] {
                            "320.1003.0821438990.821.09011.<<Базовый код>>00",
                            "24000",
                            "На разработку проектно-сметной документации"});
                testRunner.When("создание документов до резервов 2022 для обучения для ФСИН из таблицы", ((string)(null)), table38, "Когда ");
                testRunner.Then("всё хорошо", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Создание РР для обучения 2022")]
        [NUnit.Framework.CategoryAttribute("степ")]
        public void СозданиеРРДляОбучения2022()
        {
            string[] tagsOfScenario = new string[] {
                    "степ"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Создание РР для обучения 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.When("в окне Список документов \'Наше РР\' выполняю операцию \'Создать РР БА/ЛБО\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                            "Наименование",
                            "->",
                            "Выбор"});
                table39.AddRow(new string[] {
                            "<<Логин>>",
                            "",
                            "Да"});
                testRunner.And("в активном гриде заполнить данные", ((string)(null)), table39, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Далее >\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Далее >\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                            "ПБС",
                            "Статус"});
                table40.AddRow(new string[] {
                            "<<Логин>>",
                            "Новое"});
                testRunner.When("в активном гриде выбираем строки", ((string)(null)), table40, "Когда ");
                TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                            "Параметр",
                            "Значение"});
                table41.AddRow(new string[] {
                            "Каталог",
                            "<TestBinExp>"});
                testRunner.When("подготовить диалог", ((string)(null)), table41, "Когда ");
                testRunner.When("в списке документов \'Наше РР\' выполнить операцию \'Выгрузка\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("есть файл в \'<TestBinExp>\' с маской \'*.AP*\' и данными \'<<Базовый код>>00/001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("переименовать файл \'<TestBinExp>\' с маской \'*.AP*\' и данными \'<<Базовый код>>00/0" +
                        "01\' в \'<<Логин>>.AP0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                            "ПБС",
                            "Статус"});
                table42.AddRow(new string[] {
                            "<<Логин>>",
                            "Отправлено"});
                testRunner.When("в активном гриде выбираем строки", ((string)(null)), table42, "Когда ");
                TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                            "Параметр",
                            "Значение"});
                table43.AddRow(new string[] {
                            "Номер документа",
                            "00"});
                table43.AddRow(new string[] {
                            "Дата документа",
                            "<glodatedate>"});
                table43.AddRow(new string[] {
                            "Тип документа",
                            "Ручной режим"});
                table43.AddRow(new string[] {
                            "Примечание",
                            "<<Логин>>"});
                testRunner.And("подготовить диалог", ((string)(null)), table43, "И ");
                testRunner.And("в окне Список документов \'Наше РР\' выполняю операцию \'Принят в ФК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Сохранение выписки по ЛС в файл (контекст) 2022")]
        [NUnit.Framework.CategoryAttribute("степ")]
        public void СохранениеВыпискиПоЛСВФайлКонтекст2022()
        {
            string[] tagsOfScenario = new string[] {
                    "степ"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Сохранение выписки по ЛС в файл (контекст) 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.When("сохраняем выписку в файл \'<TestBinExp>/<<Логин>>.vr0\' 2022", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Донастройка региона для обучения 2022")]
        public void ДонастройкаРегионаДляОбучения2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Донастройка региона для обучения 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'<<Логин>>\' с паролем \'<<Пароль>>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.And("заполнена иерархия БР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("выполнить пункт меню \'Организации\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код"});
                table44.AddRow(new string[] {
                            "<<Базовый код>>00"});
                testRunner.When("в активном гриде выбираем строки", ((string)(null)), table44, "Когда ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                            "Поле",
                            "Значение"});
                table45.AddRow(new string[] {
                            "Код",
                            "<<Базовый код>>01"});
                table45.AddRow(new string[] {
                            "Сокращенное наименование",
                            "ПБС 1 <<Логин>>"});
                table45.AddRow(new string[] {
                            "Краткое наименование",
                            "ПБС 1 <<Логин>>"});
                table45.AddRow(new string[] {
                            "Полное наименование",
                            "Территория ПБС1 <<Логин>>"});
                table45.AddRow(new string[] {
                            "Тип организации",
                            "Учреждение"});
                table45.AddRow(new string[] {
                            "Порядковый номер",
                            "<globalintnumber>"});
                table45.AddRow(new string[] {
                            "Начало",
                            "01.01.2022"});
                testRunner.And("заполнить параметры формы", ((string)(null)), table45, "И ");
                TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                            "Тип лицевого счета",
                            "Номер лицевого счета",
                            "ТОФК"});
                table46.AddRow(new string[] {
                            "03",
                            "03345678901",
                            "0400"});
                testRunner.And("в форме редактирования организации ввести счет", ((string)(null)), table46, "И ");
                testRunner.And("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код"});
                table47.AddRow(new string[] {
                            "<<Базовый код>>00"});
                testRunner.And("в активном гриде выбираем строки", ((string)(null)), table47, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                            "Поле",
                            "Значение"});
                table48.AddRow(new string[] {
                            "Код",
                            "<<Базовый код>>02"});
                table48.AddRow(new string[] {
                            "Сокращенное наименование",
                            "ПБС 2 <<Логин>>"});
                table48.AddRow(new string[] {
                            "Краткое наименование",
                            "ПБС 2 <<Логин>>"});
                table48.AddRow(new string[] {
                            "Полное наименование",
                            "Территория ПБС2 <<Логин>>"});
                table48.AddRow(new string[] {
                            "Тип организации",
                            "Учреждение"});
                table48.AddRow(new string[] {
                            "Порядковый номер",
                            "<globalintnumber>"});
                table48.AddRow(new string[] {
                            "Начало",
                            "01.01.2022"});
                testRunner.And("заполнить параметры формы", ((string)(null)), table48, "И ");
                TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                            "Тип лицевого счета",
                            "Номер лицевого счета",
                            "ТОФК"});
                table49.AddRow(new string[] {
                            "03",
                            "03345678901",
                            "0400"});
                testRunner.And("в форме редактирования организации ввести счет", ((string)(null)), table49, "И ");
                testRunner.And("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код"});
                table50.AddRow(new string[] {
                            "<<Базовый код>>00"});
                testRunner.And("в активном гриде выбираем строки", ((string)(null)), table50, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                            "Поле",
                            "Значение"});
                table51.AddRow(new string[] {
                            "Код",
                            "<<Базовый код>>03"});
                table51.AddRow(new string[] {
                            "Сокращенное наименование",
                            "ПБС 3 <<Логин>>"});
                table51.AddRow(new string[] {
                            "Краткое наименование",
                            "ПБС 3 <<Логин>>"});
                table51.AddRow(new string[] {
                            "Полное наименование",
                            "Территория ПБС3 <<Логин>>"});
                table51.AddRow(new string[] {
                            "Тип организации",
                            "Учреждение"});
                table51.AddRow(new string[] {
                            "Порядковый номер",
                            "<globalintnumber>"});
                table51.AddRow(new string[] {
                            "Начало",
                            "01.01.2022"});
                testRunner.And("заполнить параметры формы", ((string)(null)), table51, "И ");
                TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                            "Тип лицевого счета",
                            "Номер лицевого счета",
                            "ТОФК"});
                table52.AddRow(new string[] {
                            "03",
                            "03345678901",
                            "0400"});
                testRunner.And("в форме редактирования организации ввести счет", ((string)(null)), table52, "И ");
                testRunner.And("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код"});
                table53.AddRow(new string[] {
                            "<<Базовый код>>00"});
                testRunner.And("в активном гриде выбираем строки", ((string)(null)), table53, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Добавить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                            "Поле",
                            "Значение"});
                table54.AddRow(new string[] {
                            "Код",
                            "<<Базовый код>>04"});
                table54.AddRow(new string[] {
                            "Сокращенное наименование",
                            "ПБС 4 <<Логин>>"});
                table54.AddRow(new string[] {
                            "Краткое наименование",
                            "ПБС 4 <<Логин>>"});
                table54.AddRow(new string[] {
                            "Полное наименование",
                            "Территория ПБС4 <<Логин>>"});
                table54.AddRow(new string[] {
                            "Тип организации",
                            "Учреждение"});
                table54.AddRow(new string[] {
                            "Порядковый номер",
                            "<globalintnumber>"});
                table54.AddRow(new string[] {
                            "Начало",
                            "01.01.2022"});
                testRunner.And("заполнить параметры формы", ((string)(null)), table54, "И ");
                TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                            "Тип лицевого счета",
                            "Номер лицевого счета",
                            "ТОФК"});
                table55.AddRow(new string[] {
                            "03",
                            "03345678901",
                            "0400"});
                testRunner.And("в форме редактирования организации ввести счет", ((string)(null)), table55, "И ");
                testRunner.And("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("выполнить пункт меню \'Редактирование структуры росписи\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.Then("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Первичная загрузка справочников к обучению 2022")]
        public void ПервичнаяЗагрузкаСправочниковКОбучению2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Первичная загрузка справочников к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Then("Выполняем сценарий \'Первичная загрузка данных ГРБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
                testRunner.And("Выполняем сценарий \'Первичная загрузка данных РзПрз\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'Первичная загрузка данных ЦСР 2016\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'Первичная загрузка данных ВР 2016\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'Первичная загрузка данных ОУНР 2016\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'Первичная загрузка данных НРПОФ 2016\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'Первичная загрузка данных Округа\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'Первичная загрузка данных Субъекты\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'Первичная загрузка данных ТОФК МИНИ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'Первичная загрузка данных Справочник кодов ОКС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.Given("выполнить пункт меню \'Организации\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код"});
                table56.AddRow(new string[] {
                            "xxxxx320"});
                testRunner.When("в активном гриде выбираем строки", ((string)(null)), table56, "Когда ");
                testRunner.And("в активной форме нажимаем кнопку \'Открыть\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                            "Поле",
                            "Значение"});
                table57.AddRow(new string[] {
                            "Начало",
                            "01.01.2022"});
                testRunner.And("заполнить параметры формы", ((string)(null)), table57, "И ");
                TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                            "Тип лицевого счета",
                            "Номер лицевого счета",
                            "ТОФК"});
                table58.AddRow(new string[] {
                            "03",
                            "03345678901",
                            "0400"});
                testRunner.And("в форме редактирования организации ввести счет", ((string)(null)), table58, "И ");
                testRunner.And("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Закрыть\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Первичное создание БР к обучению 2022")]
        public void ПервичноеСозданиеБРКОбучению2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Первичное создание БР к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.And("нет Росписи \'Расходов\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("есть данные в справочнике \'ГРБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("есть данные в справочнике \'РзПрз\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("есть данные в справочнике \'ЦСР\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("есть данные в справочнике \'ВР\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("есть данные в справочнике \'НР\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("есть данные в справочнике \'Организации\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("заполнена иерархия БР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("создаем пустую Роспись \'Расходов\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                            "Полный код"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.01011"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.01012"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.20011"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.20012"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.21021"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.21022"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.22021"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.22022"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.25011"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.25012"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.17021"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.17022"});
                table59.AddRow(new string[] {
                            "320.0708.4230800590.611.10011"});
                table59.AddRow(new string[] {
                            "320.0708.4230800590.611.10012"});
                table59.AddRow(new string[] {
                            "320.1003.0821438990.821.02011"});
                table59.AddRow(new string[] {
                            "320.1003.0821438990.821.02012"});
                table59.AddRow(new string[] {
                            "320.1003.0821438990.821.09011"});
                table59.AddRow(new string[] {
                            "320.1003.0821438990.821.09012"});
                table59.AddRow(new string[] {
                            "320.1003.0821438990.821.99011"});
                table59.AddRow(new string[] {
                            "320.1003.0821438990.821.99012"});
                table59.AddRow(new string[] {
                            "320.1003.0821438990.821.99021"});
                table59.AddRow(new string[] {
                            "320.1003.0821438990.821.99022"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.99011"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.99012"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.99021"});
                table59.AddRow(new string[] {
                            "320.0109.0311630150.224.99022"});
                table59.AddRow(new string[] {
                            "320.0501.4230394034.414.10011"});
                table59.AddRow(new string[] {
                            "320.0501.4230394034.414.10012"});
                table59.AddRow(new string[] {
                            "320.0708.4230800590.611.99011"});
                table59.AddRow(new string[] {
                            "320.0708.4230800590.611.99012"});
                table59.AddRow(new string[] {
                            "320.0708.4230800590.611.99021"});
                table59.AddRow(new string[] {
                            "320.0708.4230800590.611.99022"});
                testRunner.And("добавляем коды в Роспись", ((string)(null)), table59, "И ");
                testRunner.And("сохраняем редактируемую Роспись", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код",
                            "Является ПНО"});
                table60.AddRow(new string[] {
                            "320.1003.0821438990.821",
                            "Да"});
                testRunner.Then("в росписи \'Расходов\' проставляем флаг ПНО", ((string)(null)), table60, "Тогда ");
                testRunner.Then("всё хорошо", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Первичное создание БР к обучению ПОФ 2022")]
        public void ПервичноеСозданиеБРКОбучениюПОФ2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Первичное создание БР к обучению ПОФ 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.And("заполнена иерархия БР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("нет Росписи \'ПОФ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("есть данные в справочнике \'ГРБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("есть данные в справочнике \'НРПОФ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("есть данные в справочнике \'Организации\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("заполнена иерархия БР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("создаем пустую Роспись \'ПОФ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                            "Полный код"});
                table61.AddRow(new string[] {
                            "320.11"});
                table61.AddRow(new string[] {
                            "320.12"});
                table61.AddRow(new string[] {
                            "320.13"});
                table61.AddRow(new string[] {
                            "320.15"});
                table61.AddRow(new string[] {
                            "320.16"});
                table61.AddRow(new string[] {
                            "320.21"});
                table61.AddRow(new string[] {
                            "320.22"});
                table61.AddRow(new string[] {
                            "320.23"});
                table61.AddRow(new string[] {
                            "320.25"});
                table61.AddRow(new string[] {
                            "320.26"});
                testRunner.And("добавляем коды в Роспись", ((string)(null)), table61, "И ");
                testRunner.And("сохраняем редактируемую Роспись", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Просто тесты территории к обучению 2022")]
        public void ПростоТестыТерриторииКОбучению2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Просто тесты территории к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'<<Логин>>\' с паролем \'<<Пароль>>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.When("Выполняем сценарий \'Заполнение настрок пользователя (контекст)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("Выполняем сценарий \'ТО Загрузка РР к обучения 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'ТО Достройка Росписи к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'ТО Заполнение Росписи к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'ТО Формирование РР к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'ТО Квитование по выписке 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'ТО Загрузка РР ПОФ к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'ТО Достройка Росписи ПОФ к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'ТО Распределение ПОФ к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("Выполняем сценарий \'ТО Формирование РР ПОФ к обучению 2022\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ТО Загрузка РР к обучения 2022")]
        public void ТОЗагрузкаРРКОбучения2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ТО Загрузка РР к обучения 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.When("выполнить пункт меню \'Входящие РР\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                            "Параметр",
                            "Значение"});
                table62.AddRow(new string[] {
                            "Единственный файл",
                            "<TestBinExp>\\<<Логин>>.AP0"});
                testRunner.And("подготовить диалог", ((string)(null)), table62, "И ");
                TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                            "Заголовок",
                            "Текст",
                            "Является ошибкой",
                            "Обязательно"});
                table63.AddRow(new string[] {
                            "Обработка РР",
                            "РР обработано",
                            "Нет",
                            "Да"});
                testRunner.And("готовим MessageBox", ((string)(null)), table63, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Загрузить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("чистим конфиги MessageBox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Закрыть\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ТО Достройка Росписи к обучению 2022")]
        public void ТОДостройкаРосписиКОбучению2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ТО Достройка Росписи к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'<<Логин>>\' с паролем \'<<Пароль>>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.When("выполнить пункт меню \'Редактирование структуры росписи\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.When("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в редактировании БР в поле Код вводим \'320.0109.0311630150.224.0101-\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'00000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР в поле Код вводим \'320.0109.0311630150.224.0101-.00000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'<<Базовый код>>01, <<Базовый код" +
                        ">>02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в редактировании БР в поле Код вводим \'320.0109.0311630150.224.1702-\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'00000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР в поле Код вводим \'320.0109.0311630150.224.1702-.00000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'<<Базовый код>>00, <<Базовый код" +
                        ">>01, <<Базовый код>>02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в редактировании БР в поле Код вводим \'320.0708.4230800590.611.1001-\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'00000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР в поле Код вводим \'320.0708.4230800590.611.1001-.00000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'<<Базовый код>>01, <<Базовый код" +
                        ">>02, <<Базовый код>>03, <<Базовый код>>00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в редактировании БР в поле Код вводим \'320.1003.0821438990.821.0901-\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'00000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР в поле Код вводим \'320.1003.0821438990.821.0901-.00000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'<<Базовый код>>01, <<Базовый код" +
                        ">>02, <<Базовый код>>03, <<Базовый код>>04, <<Базовый код>>00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.Then("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ТО Заполнение Росписи к обучению 2022")]
        public void ТОЗаполнениеРосписиКОбучению2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ТО Заполнение Росписи к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.When("выполнить пункт меню \'Бюджетная роспись\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.When("в открытой Росписи выделить узел \'320.0109.0311630150.224.0101-.00000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в активной форме нажать кнопку \'Распределение по ПБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код",
                            "->",
                            "&DeltaSmLbo1"});
                table64.AddRow(new string[] {
                            "320.0109.0311630150.224.0101-.00000.<<Базовый код>>01",
                            "",
                            "1000"});
                testRunner.When("в активном гриде заполнить данные", ((string)(null)), table64, "Когда ");
                testRunner.And("в активной форме установить галку \'Ввод завершен\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("в открытой Росписи выделить узел \'320.0708.4230800590.611.1001-.00000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в активной форме нажать кнопку \'Распределение по ПБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код",
                            "->",
                            "&DeltaSmLbo1"});
                table65.AddRow(new string[] {
                            "320.0708.4230800590.611.1001-.00000.<<Базовый код>>02",
                            "",
                            "500"});
                table65.AddRow(new string[] {
                            "320.0708.4230800590.611.1001-.00000.<<Базовый код>>03",
                            "",
                            "2900"});
                table65.AddRow(new string[] {
                            "320.0708.4230800590.611.1001-.00000.<<Базовый код>>00",
                            "",
                            "2,99"});
                testRunner.When("в активном гриде заполнить данные", ((string)(null)), table65, "Когда ");
                testRunner.And("в активной форме установить галку \'Ввод завершен\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("в открытой Росписи выделить узел \'320.1003.0821438990.821.0901-.00000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в активной форме нажать кнопку \'Распределение по ПБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код",
                            "->",
                            "&DeltaSmBa1"});
                table66.AddRow(new string[] {
                            "320.1003.0821438990.821.0901-.00000.<<Базовый код>>02",
                            "",
                            "1500"});
                table66.AddRow(new string[] {
                            "320.1003.0821438990.821.0901-.00000.<<Базовый код>>03",
                            "",
                            "100"});
                table66.AddRow(new string[] {
                            "320.1003.0821438990.821.0901-.00000.<<Базовый код>>00",
                            "",
                            "1,01"});
                testRunner.When("в активном гриде заполнить данные", ((string)(null)), table66, "Когда ");
                testRunner.And("в активной форме установить галку \'Ввод завершен\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ТО Формирование РР к обучению 2022")]
        public void ТОФормированиеРРКОбучению2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ТО Формирование РР к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("выполнить пункт меню \'Исходящие РР\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.When("в активной форме нажимаем кнопку \'Создать РР БА/ЛБО\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.When("в активной форме нажимаем кнопку \'Выбрать всё\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в активной форме нажимаем кнопку \'Далее >\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Открыть\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Открыть\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Далее >\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ТО Квитование по выписке 2022")]
        public void ТОКвитованиеПоВыписке2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ТО Квитование по выписке 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                            "Номер документа",
                            "Доп. код"});
                table67.AddRow(new string[] {
                            "<<Базовый код>>00/001",
                            "00"});
                table67.AddRow(new string[] {
                            "<<Базовый код>>01/001",
                            "01"});
                table67.AddRow(new string[] {
                            "<<Базовый код>>02/001",
                            "02"});
                table67.AddRow(new string[] {
                            "<<Базовый код>>03/001",
                            "03"});
                testRunner.When("Выполняем сценарий \'ТО Выгрузка РР (контекст-контекст) 2022\'", ((string)(null)), table67, "Когда ");
                testRunner.When("выполняем пункт меню \'Выписки из л/с ГРБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                            "Параметр",
                            "Значение"});
                table68.AddRow(new string[] {
                            "Единственный файл",
                            "<TestBinExp>\\<<Логин>>.vr0"});
                testRunner.And("подготовить диалог", ((string)(null)), table68, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Загрузить выписку из л/с ГРБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("выполняем пункт меню \'Выписки из л/с ГРБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                            "Статус",
                            "Дата"});
                table69.AddRow(new string[] {
                            "Все документы обработаны",
                            "<glodatedate> 0:00:00"});
                testRunner.When("в активном гриде выбираем строки", ((string)(null)), table69, "Когда ");
                testRunner.When("выполняем пункт меню \'Исходящие РР\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                            "Номер",
                            "Статус"});
                table70.AddRow(new string[] {
                            "<<Базовый код>>01/001",
                            "Принято в ФК"});
                table70.AddRow(new string[] {
                            "<<Базовый код>>02/001",
                            "Принято в ФК"});
                table70.AddRow(new string[] {
                            "<<Базовый код>>03/001",
                            "Принято в ФК"});
                testRunner.When("в активном гриде выбираем строки", ((string)(null)), table70, "Когда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ТО Выгрузка РР (контекст-контекст) 2022")]
        public void ТОВыгрузкаРРКонтекст_Контекст2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ТО Выгрузка РР (контекст-контекст) 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.When("выполняем пункт меню \'Исходящие РР\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                            "Номер",
                            "Статус"});
                table71.AddRow(new string[] {
                            "<<Номер документа>>",
                            "Новое"});
                testRunner.When("в активном гриде выбираем строки", ((string)(null)), table71, "Когда ");
                TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                            "Параметр",
                            "Значение"});
                table72.AddRow(new string[] {
                            "Каталог",
                            "<TestBinExp>"});
                testRunner.And("подготовить диалог", ((string)(null)), table72, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Выгрузка\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("есть файл в \'<TestBinExp>\' с маской \'*.AP*\' и данными \'<<Базовый код>><<Доп. код>" +
                        ">/001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ТО Загрузка РР ПОФ к обучению 2022")]
        public void ТОЗагрузкаРРПОФКОбучению2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ТО Загрузка РР ПОФ к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.When("выполнить пункт меню \'Входящие РР\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                            "Параметр",
                            "Значение"});
                table73.AddRow(new string[] {
                            "Единственный файл",
                            "<TestBinExp>\\<<Логин>> ПОФ Бюджет.AP0"});
                testRunner.And("подготовить диалог", ((string)(null)), table73, "И ");
                TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                            "Заголовок",
                            "Текст",
                            "Является ошибкой",
                            "Обязательно"});
                table74.AddRow(new string[] {
                            "Обработка РР",
                            "РР обработано",
                            "Нет",
                            "Да"});
                testRunner.And("готовим MessageBox", ((string)(null)), table74, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Загрузить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("чистим конфиги MessageBox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Закрыть\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("выполнить пункт меню \'Входящие РР\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                            "Параметр",
                            "Значение"});
                table75.AddRow(new string[] {
                            "Единственный файл",
                            "<TestBinExp>\\<<Логин>> ПОФ ДИБФ.AP0"});
                testRunner.And("подготовить диалог", ((string)(null)), table75, "И ");
                TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                            "Заголовок",
                            "Текст",
                            "Является ошибкой",
                            "Обязательно"});
                table76.AddRow(new string[] {
                            "Обработка РР",
                            "РР обработано",
                            "Нет",
                            "Да"});
                testRunner.And("готовим MessageBox", ((string)(null)), table76, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Загрузить\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("чистим конфиги MessageBox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Закрыть\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ТО Достройка Росписи ПОФ к обучению 2022")]
        public void ТОДостройкаРосписиПОФКОбучению2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ТО Достройка Росписи ПОФ к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'<<Логин>>\' с паролем \'<<Пароль>>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.When("выполнить пункт меню \'Редактирование структуры росписи ПОФ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.When("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в редактировании БР в поле Код вводим \'320.10\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'11\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР в поле Код вводим \'320.11\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'<<Базовый код>>01, <<Базовый код" +
                        ">>02, <<Базовый код>>00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в редактировании БР в поле Код вводим \'320.20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'21\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Элемент структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР в поле Код вводим \'320.21\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажать кнопку \'Поиск\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР выбираем группу \'Настройка структуры\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в редактировании БР заполняем коды справочников \'<<Базовый код>>01, <<Базовый код" +
                        ">>02, <<Базовый код>>00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.Then("в активной форме нажать кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ТО Распределение ПОФ к обучению 2022")]
        public void ТОРаспределениеПОФКОбучению2022()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ТО Распределение ПОФ к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.When("выполняем пункт меню \'Бюджетная роспись ПОФ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в открытой Росписи на узле \'320.11\' создаем документ \'Распределение ПОФ по ПБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код",
                            "->",
                            "&DeltaSmPof"});
                table77.AddRow(new string[] {
                            "320.11.<<Базовый код>>00",
                            "",
                            "100"});
                table77.AddRow(new string[] {
                            "320.11.<<Базовый код>>01",
                            "",
                            "200"});
                table77.AddRow(new string[] {
                            "320.11.<<Базовый код>>02",
                            "",
                            "300"});
                testRunner.And("в активном гриде заполнить данные", ((string)(null)), table77, "И ");
                testRunner.And("в активной форме установить галку \'Ввод завершен\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("выполняем пункт меню \'Бюджетная роспись ПОФ\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                testRunner.And("в открытой Росписи на узле \'320.21\' создаем документ \'Распределение ПОФ по ПБС\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код",
                            "->",
                            "&DeltaSmPof"});
                table78.AddRow(new string[] {
                            "320.21.<<Базовый код>>00",
                            "",
                            "10"});
                table78.AddRow(new string[] {
                            "320.21.<<Базовый код>>01",
                            "",
                            "20"});
                table78.AddRow(new string[] {
                            "320.21.<<Базовый код>>02",
                            "",
                            "30"});
                testRunner.And("в активном гриде заполнить данные", ((string)(null)), table78, "И ");
                testRunner.And("в активной форме установить галку \'Ввод завершен\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'ОК\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ТО Формирование РР ПОФ к обучению 2022")]
        [NUnit.Framework.CategoryAttribute("степ")]
        public void ТОФормированиеРРПОФКОбучению2022()
        {
            string[] tagsOfScenario = new string[] {
                    "степ"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ТО Формирование РР ПОФ к обучению 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("выполнить пункт меню \'Исходящие РР\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.When("в активной форме нажимаем кнопку \'Создать РР ПОФ (Бюджет)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                            "Наименование",
                            "->",
                            "Выбор"});
                table79.AddRow(new string[] {
                            "ПБС 1 <<Логин>>",
                            "",
                            "Да"});
                table79.AddRow(new string[] {
                            "ПБС 2 <<Логин>>",
                            "",
                            "Да"});
                testRunner.When("в активном гриде заполнить данные", ((string)(null)), table79, "Когда ");
                testRunner.And("в активной форме нажимаем кнопку \'Далее >\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Далее >\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.When("выполняем пункт меню \'Исходящие РР\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код ПБС",
                            "Статус",
                            "Разделы"});
                table80.AddRow(new string[] {
                            "<<Базовый код>>01",
                            "Новое",
                            "ПОФ"});
                testRunner.When("в активном гриде выбираем строки", ((string)(null)), table80, "Когда ");
                TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                            "Параметр",
                            "Значение"});
                table81.AddRow(new string[] {
                            "Каталог",
                            "<TestBinExp>"});
                testRunner.And("подготовить диалог", ((string)(null)), table81, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Выгрузка\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("есть файл в \'<TestBinExp>\' с маской \'*.AP*\' и данными \'<<Базовый код>>01/\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код ПБС",
                            "Статус",
                            "Разделы"});
                table82.AddRow(new string[] {
                            "<<Базовый код>>02",
                            "Новое",
                            "ПОФ"});
                testRunner.When("в активном гриде выбираем строки", ((string)(null)), table82, "Когда ");
                TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                            "Параметр",
                            "Значение"});
                table83.AddRow(new string[] {
                            "Каталог",
                            "<TestBinExp>"});
                testRunner.And("подготовить диалог", ((string)(null)), table83, "И ");
                testRunner.And("в активной форме нажимаем кнопку \'Выгрузка\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                testRunner.And("есть файл в \'<TestBinExp>\' с маской \'*.AP*\' и данными \'<<Базовый код>>02/\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Привязка существующих ПБС к кодам ОКС 2022")]
        [NUnit.Framework.CategoryAttribute("степ")]
        public void ПривязкаСуществующихПБСККодамОКС2022()
        {
            string[] tagsOfScenario = new string[] {
                    "степ"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Привязка существующих ПБС к кодам ОКС 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("приложение запущено под ЦА", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.And("привязать существующие ПБС к кодам ОКС 2021", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Создание документов с кодами ОКС 2022")]
        [NUnit.Framework.CategoryAttribute("степ")]
        public void СозданиеДокументовСКодамиОКС2022()
        {
            string[] tagsOfScenario = new string[] {
                    "степ"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Создание документов с кодами ОКС 2022", null, tagsOfScenario, argumentsOfScenario, featureTags);
            this.ScenarioInitialize(scenarioInfo);
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                testRunner.Given("логинимся под \'ЦА\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
                testRunner.And("есть Роспись \'Расходов\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
                TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код",
                            "Является ОКС"});
                table84.AddRow(new string[] {
                            "320.0501.4230394034.414",
                            "Да"});
                testRunner.When("в росписи \'Расходов\' проставляем флаг ОКС", ((string)(null)), table84, "Когда ");
                testRunner.When("загрузить КУ \'<TestBin>\\FbpfTest2022\\00320A00.SUC\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
                TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                            "Код",
                            "Сумма 1",
                            "Текстовка",
                            "Код ОКС"});
                table85.AddRow(new string[] {
                            "320.0501.4230394034.414.10011.00100100",
                            "10000",
                            "на строительство",
                            "00000000045487"});
                table85.AddRow(new string[] {
                            "320.0501.4230394034.414.10011.00100100",
                            "20000",
                            "на строительство",
                            "00000000209118"});
                testRunner.When("создание документов до резервов 2022 для обучения для ФСИН из таблицы", ((string)(null)), table85, "Когда ");
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
