// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rad.Db;

#nullable disable

namespace Rad.Database
{
    [DbContext(typeof(BrDbContext))]
    [Migration("20220902181628_BrInit")]
    partial class BrInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rad.Domain.Brs.Br", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long?>("Id"));

                    b.Property<int>("BrType")
                        .HasColumnType("integer");

                    b.Property<long>("OrgSid")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Brs");
                });

            modelBuilder.Entity("Rad.Domain.Brs.BrStructRow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BrId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("OnDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentRowId")
                        .HasColumnType("bigint");

                    b.Property<long>("SprId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("SysChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("XmlInfo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentRowId");

                    b.ToTable("StructRows");
                });

            modelBuilder.Entity("Rad.Domain.Brs.BrSumRow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BrId")
                        .HasColumnType("bigint");

                    b.Property<long>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<long>("Generation")
                        .HasColumnType("bigint");

                    b.Property<int>("OrderBy")
                        .HasColumnType("integer");

                    b.Property<decimal>("SmBa1")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SmBa2")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SmBa3")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SmLbo1")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SmLbo2")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SmLbo3")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SmPof")
                        .HasColumnType("numeric");

                    b.Property<long>("StructRowId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("SysChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("XmlInfo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BrId");

                    b.HasIndex("StructRowId");

                    b.ToTable("BrSumRows");
                });

            modelBuilder.Entity("Rad.Domain.Brs.BrStructRow", b =>
                {
                    b.HasOne("Rad.Domain.Brs.BrStructRow", "ParentRow")
                        .WithMany("ChildRows")
                        .HasForeignKey("ParentRowId");

                    b.Navigation("ParentRow");
                });

            modelBuilder.Entity("Rad.Domain.Brs.BrSumRow", b =>
                {
                    b.HasOne("Rad.Domain.Brs.Br", "Br")
                        .WithMany()
                        .HasForeignKey("BrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rad.Domain.Brs.BrStructRow", "StructRow")
                        .WithMany("Sums")
                        .HasForeignKey("StructRowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Br");

                    b.Navigation("StructRow");
                });

            modelBuilder.Entity("Rad.Domain.Brs.BrStructRow", b =>
                {
                    b.Navigation("ChildRows");

                    b.Navigation("Sums");
                });
#pragma warning restore 612, 618
        }
    }
}
