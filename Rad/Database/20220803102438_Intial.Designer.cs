// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rad.Db;

#nullable disable

namespace Rad.Database
{
    [DbContext(typeof(RadDbContext))]
    [Migration("20220803102438_Intial")]
    partial class Intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rad.Domain.DocRad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BossFio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BossStat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DocDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExecuterFio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExecuterPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExecuterStat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Generation")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LawDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LawNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long>("UserSid")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DocRads");
                });

            modelBuilder.Entity("Rad.Domain.DocRadRow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AdbInn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AdbKpp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AdbName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("DocRadId")
                        .HasColumnType("integer");

                    b.Property<string>("KbkCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LawDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LawLegalName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LawNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("OndateKbk")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("RadId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TodateKbk")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DocRadId");

                    b.ToTable("DocRadRows");
                });

            modelBuilder.Entity("Rad.Domain.SprKbkIncome", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("OnDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("SprKbkIncomes");
                });

            modelBuilder.Entity("Rad.Domain.SprRad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kbk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kpp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("SprKbkIncomeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("SprKbkIncomeId");

                    b.ToTable("SprRads");
                });

            modelBuilder.Entity("Rad.Domain.DocRadRow", b =>
                {
                    b.HasOne("Rad.Domain.DocRad", null)
                        .WithMany("DocRows")
                        .HasForeignKey("DocRadId");
                });

            modelBuilder.Entity("Rad.Domain.SprRad", b =>
                {
                    b.HasOne("Rad.Domain.SprKbkIncome", "SprKbkIncome")
                        .WithMany()
                        .HasForeignKey("SprKbkIncomeId");

                    b.Navigation("SprKbkIncome");
                });

            modelBuilder.Entity("Rad.Domain.DocRad", b =>
                {
                    b.Navigation("DocRows");
                });
#pragma warning restore 612, 618
        }
    }
}
